<script>

    that = this;

    //Maze Items
    const size_input = document.querySelector("#Maze-Size");
    const new_maze_button = document.querySelector('#New-Maze');
    const solve_maze_button = document.querySelector('#Solve-Maze');

    const animate_create_switch = document.querySelector('#Show-Create-Check');
    const animate_solve_switch = document.querySelector('#Show-Solve-Check');
    const create_speed_input = document.querySelector('#Create-Speed-Slider');
    const solve_speed_input = document.querySelector('#Solve-Speed-Slider');

    const maze_table = document.getElementById('Maze-Table');

    let nm = new MazeBuilder(maze_table);
    let size = 5;
    let make_new_maze = false;
    let has_maze = false;
    this.currently_solving = false;
    this.solved_maze = false;

    new_maze_button.addEventListener("click",()=> newClick());
    solve_maze_button.addEventListener("click",()=> solveClick());

    const newClick = () => {
        if(this.currently_solving){
            setTimeout(() => {
                new_button.click();
            },50);
        }else{
            // animate_create_switch.checked
            // parseInt(create_speed_input.value)
            if(make_new_maze){
                const allCells = document.querySelector("tbody");
                allCells.parentElement.removeChild(allCells);
                nm = new MazeBuilder(maze_table);
                solved_maze = false;
            }
            let i_s = size_input.value;
            if(i_s.length == 0){
                newMaze();
            }else{
                size = parseInt(i_s);
                newMaze();
            }
            has_maze = true;
            make_new_maze = true;
        }
    };

    const solveClick = () => {
        if(has_maze){
            if(this.solved_maze){
                alert("You already solved the maze");
            }else{
                this.currently_solving = true;
                nm.solveMaze(
                    animate_solve_switch.checked,
                    parseInt(solve_speed_input.value)
                );
            }
        }else{
            alert("You need to create a maze first");
        }
    };

    //maze functions
    const newMaze = () => {
        nm.instantiateMaze(
            size,animate_create_switch.checked,parseInt(create_speed_input.value)
        );
    };

</script>